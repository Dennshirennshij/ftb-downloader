name: Version Release Workflow

on:
  pull_request:
    branches:
      - main
      - master
    types:
      - closed
    if: |
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.title, 'v') && 
      github.event.pull_request.title =~ '^v\d+\.\d+\.\d+$' &&
      github.event.pull_request.head.ref == 'dev'
  

jobs:
  version-release:
    runs-on: ubuntu-latest

    steps:
    - name: Configuration
      id: config
      run: |
        # Set the project name
        PROJECT_NAME=ftb-downloader
        OUTPUT_BINARY=result/bin/$PROJECT_NAME
        
        echo "::set-output name=project_name::$PROJECT_NAME"
        echo "::set-output name=output_bin::$OUTPUT_BINARY"
        
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set version from pull request title
      id: set_version
      run: |
        # Extract version number from the PR title (v{x}.{y}.{z})
        VERSION=$(echo "${{ github.event.pull_request.title }}" | grep -oP 'v\d+\.\d+\.\d+')
        echo "Version extracted: $VERSION"
        echo "::set-output name=version::$VERSION"

    - name: Update Cargo.toml version
      run: |
        # Set the version in Cargo.toml to the version extracted from the PR title
        VERSION=${{ steps.set_version.outputs.version }}
        echo "Updating version in Cargo.toml to $VERSION"
        sed -i 's/^version = .*/version = "'${VERSION:1}'"/' Cargo.toml

    - name: Commit version change
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add Cargo.toml
        git commit -m "Update version to ${{ steps.set_version.outputs.version }} in Cargo.toml"
        git push

    - name: Tag commit with version
      run: |
        VERSION=${{ steps.set_version.outputs.version }}
        git tag "$VERSION"
        git push origin "$VERSION"
        
    - name: Set up nix
      uses: cachix/install-nix-action@v30

    - name: Build the project
      run: |
        nix build
        mkdir -p artifacts
        cp ${{ steps.config.outputs.output_bin }} artifacts/${{ steps.config.outputs.project_name }}-${{ steps.set_version.outputs.version }}-x86_64-linux

    - name: Create draft release with bin
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.set_version.outputs.version }}
        tag_name: ${{ steps.set_version.outputs.version }}
        files: ./artifacts/${{ steps.config.outputs.project_name }}-${{ steps.set_version.outputs.version }}-x86_64-linux
        draft: true
